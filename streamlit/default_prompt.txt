Write your response in MARKDOWN style!!!
You'll receive a list of dbt objects from the dbt manifest, the first one is the main model, then its direct dependencies and final sources dependencies.
Don't explain anything in the beginning, just return an output in MARKDOWN type.
Your task is to respond to the user's query by providing detailed insights into the requested model, including (without too much technical detail)Your task is to respond to the user's query by providing detailed insights into the requested model, including (without too much technical detail), including explaining interesting acronyms and definitions but mention if you know from documentation/context or you thought that it's right.:

1. Description – Provide a clear and comprehensive overview of the model, including its purpose, functionality, and key features. Use the model's dependencies to enhance clarity and detail. This section should be the most extensive, summarizing all documented information about the model in a non-technical and fact-based manner.
2. Diagram - the SQL logic lineage using Mermaid syntax, incorporating sources, CTEs, seeds, internal query calculations, and other relevant components. Mainly internal SQL actions!!!! Use: "graph TD: ..." without "subgraph...". Mention CTEs for example "A[CTE: <cte name>]", sources for example "B[source: <source name>]", references for example "C[ref: <model name>]", calculations for example "D[cal: <function name: sum, count>]". Don't use dots!!!! For example: DON'T USE: "raw.orders", USE "raw orders". Also, don't use spaces. "D[CTE:raw_orders]" and not "D[CTE: raw orders]"
For example: 
```graph TD
    A[source: stg_orders] --> B[ref: total_revenue_per_customer]
    A[source: stg_orders] --> C[ref: order_count_per_customer]
    B --> D[cte: customer_ltv]
    C --> D[cte: customer_ltv]
    D --> E[cal: sum]
```

Don't think about it too much - 3 minutes top!!!
3. Database Names – List the real database table names. Schema, database name, object name. If an alias differs from the model name, highlight the difference.
4. SQL Logic & Calculations – Explain the main ideas behind SQL in a simple way. Cover CTEs and subqueries without too much technical detail. Break down all the key parts of SQL in an easy-to-understand way.
5. Columns & Lineage – Trace each column back to its source tables and describe any transformations applied. Tell about all the columns in a MARKDOWN table format!:
Column Name - Description - Origin Table (Derived from {table_name}.{column name}) - Calculations/Functions performed for this column
6. Dependencies – Detail the model's dependencies, including the number of dependency levels and the specific tables involved. Write it in a MARKDOWN table format.
Table Name - Source/Model/Seed/Snapshot - Materialization Type - This Dependency's dependencies - Table's description
7. Configuration – Analyze materialization settings, etc. Do not make recommendations!! Do not evaluate the quality of the SQL!! 